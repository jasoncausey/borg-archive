Metadata-Version: 2.2
Name: borg-archive-python-working
Version: 0.1.0
Summary: Add your description here
Requires-Python: >=3.12
Description-Content-Type: text/markdown
License-File: LICENSE.md
Requires-Dist: click>=8.1.8
Requires-Dist: rich>=13.9.4

# borg-archive

**WARNING:  This tool is still being ported over from Bash.  At the moment, assume this documentation contains errors and is incomplete!**

A Python tool for creating single-file compressed archives using [Borg Backup](https://www.borgbackup.org/).

This tool allows you to create, extract, mount, and update Borg archives that are stored as single compressed files. It's particularly useful for sharing and archiving versioned datasets for research purposes.

## Features

- Create single-file compressed archives using Borg Backup
- Extract archives to a directory
- Mount archives read-only (requires FUSE)
- Update archives with new changes
- List available versions/tags in an archive
- Support for encryption
- Automatic compression using zstd (falls back to pigz or gzip)
- Modern CLI with rich terminal output

## Requirements

- Python 3.8 or later
- [Borg Backup](https://www.borgbackup.org/)
- `tar` (usually pre-installed)
- One of: `zstd` (recommended), `pigz`, or `gzip`
- FUSE (optional, required for mount functionality)
  - For macOS: [macFuse](https://macfuse.github.io/)

## Installation

You can install `borg-archive` using pip:

```bash
pip install borg-archive
```

Or for a more isolated installation, use [pipx](https://pypa.github.io/pipx/):

```bash
pipx install borg-archive
```

Or, you can use `uv tool` to install:

```bash
uv tool install borg-archive
```

## Usage

### Create a New Archive

```bash
borg-archive create archive.baz /path/to/data
```

With encryption:
```bash
borg-archive create archive.baz /path/to/data --encryption
```

NOTE:  The encryption flag might be removed from this software until the stable release of Borg version 2 (Borg2).  The reason is that making exact copies of a borg repository also copies nonces used during encryption; this create a vulnerability if two or more copies of the same repository have differing updated applied, and then are later compared.  Since the focus of this project is more aligned with _data availabiltiy_, _data archiving_, and _data sharing_, secure encryption is not considered a high priority at the moment.  It looks like changes in Borg2 will allow copies of a repository to securely diverge, so this feature might become more useful later.

### Extract an Archive

Latest version:
```bash
borg-archive extract archive.baz /path/to/output
```

Specific version:
```bash
borg-archive extract archive.baz /path/to/output --tag selected-tag
```

### List Available Tags

```bash
borg-archive list archive.baz
```

### Mount an Archive (Read-only)

```bash
borg-archive mount archive.baz /path/to/mount
```

### Unmount an Archive

```bash
borg-archive umount /path/to/mount
```

### Update an Archive

```bash
borg-archive update archive.baz /path/to/data
```

With a specific tag:
```bash
borg-archive update archive.baz /path/to/data --tag custom-tag
```

## Python API

You can also use borg-archive as a Python library:

```python
from pathlib import Path
from borg_archive import BorgArchive

# Create a new archive
with BorgArchive(Path("archive.baz")) as archive:
    archive.create(Path("/path/to/data"))

# Extract an archive
with BorgArchive(Path("archive.baz")) as archive:
    archive.extract(Path("/path/to/output"))

# List tags
with BorgArchive(Path("archive.baz")) as archive:
    archive.list_tags()

# Mount an archive
with BorgArchive(Path("archive.baz")) as archive:
    archive.mount(Path("/path/to/mount"))

# Update an archive
with BorgArchive(Path("archive.baz")) as archive:
    archive.update(Path("/path/to/data"))
```

## License

MIT License - see LICENSE.md for details.

## Acknowledgments

This project was inspired by the need for a better way to store and share versioned datasets, and builds upon the excellent [Borg Backup](https://www.borgbackup.org/) tool.
